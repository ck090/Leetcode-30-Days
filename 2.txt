Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: 

Input: 19
Output: true
Explanation: 
1^2 + 9^2 = 82
8^2 + 2^2 = 68
6^2 + 8^2 = 100
1^2 + 0^2 + 0^2 = 1

Solution:

class Solution {
public:
    bool isHappy(int n) {
        if (n == 0) return false;
        if (n == 1) return true;
        while (n > 1) {
            int r = 0;
            int sum = 0;
            while (n != 0) {
                r = n % 10;
                sum += pow(r, 2);
                n /= 10;
            }
            if (sum == 1) return true;
            if (sum == 4) return false;
            n = sum;
        }
        return 0;
    }
};